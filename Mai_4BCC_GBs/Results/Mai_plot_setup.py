
def get_e_list(potchoice):
    #e_list = ['Ti', 'V', 'Cr', 'Mn', 'Co', 'Ni', 'Cu', 'Nb', 'Mo', 'W']
    pot_list_uMLIPs = ['MACE', 'CHGNet(v0_3_0)', 'CHGNet(v0_2_0)', 'M3GNet', 'SevenNet']
    pot_list_EIPs = ['FeMnNiCu_Bonny', 'FeCrCoNiCu_Deluigi', 'FeTiCoNiCuMoW_Zhou', 'FeCu_Lee']
    if potchoice in pot_list_EIPs:
        if potchoice == 'FeMnNiCu_Bonny':
            e_list = ['Mn', 'Ni', 'Cu']
        if potchoice == 'FeCrCoNiCu_Deluigi':
            e_list = ['Cr', 'Co', 'Ni', 'Cu']
        if potchoice == 'FeTiCoNiCuMoW_Zhou':
            e_list = ['Ti', 'Co', 'Ni', 'Cu', 'Mo', 'W']
        if potchoice == 'FeCu_Lee':
            e_list = ['Cu']
    else:
        e_list = ['Ti', 'V', 'Cr', 'Mn', 'Co', 'Ni', 'Cu', 'Nb', 'Mo', 'W']
    return e_list


# Data lists copy from E_seg_all.txt
data_list_tot = [[[-0.3369117224716547, -0.13673367627939115, -0.01970387573373955, -0.054332593977846955, -0.12646557927303093, -0.15963068328471763, -0.19132363205403635, -0.5244852147271786, -0.2881939627250176, -0.2539080364322217], [-0.01805861284128696, 0.026694366353865462, 0.03751439882239538, 0.0008894590870340835, -0.023438944328916023, -0.0348681896226708, -0.03615452617123083, 0.006797967711747788, -0.036786929537584, -0.049489590377675086], [-0.5485343856144027, -0.2604807332746759, 0.014147675395633996, -0.06523363089149825, -0.12357473795611895, -0.14748248907687866, -0.16908618862794356, -0.835513598380544, -0.42236058261846665, -0.42147967604387304], [-0.26147936499825164, -0.07451172230463499, 0.04389831845850267, 0.005866366142413426, -0.040600267878176055, -0.08862360331664831, -0.055182206043809856, -0.4494552132060221, -0.2185312098255281, -0.20974227663856482]], [[-1.1740646362304688, -0.132110595703125, -0.11368560791015625, -0.15131378173828125, -0.1052398681640625, -0.10410308837890625, -0.07903289794921875, -1.1815643310546875, -0.21247100830078125, -0.21831512451171875], [0.0362396240234375, 0.0037994384765625, -0.01666259765625, -0.0135955810546875, -0.03167724609375, -0.036102294921875, -0.017669677734375, 0.0554046630859375, -0.041473388671875, -0.0286407470703125], [-0.35271453857421875, -0.17952346801757812, -0.07839202880859375, -0.1437835693359375, -0.11392593383789062, -0.1121826171875, -0.07915115356445312, -0.6398124694824219, -0.3271675109863281, -0.3288688659667969], [-0.16834640502929688, -0.08706092834472656, -0.07176589965820312, -0.07692718505859375, -0.08808517456054688, -0.11344718933105469, -0.07406044006347656, -0.33687591552734375, -0.224212646484375, -0.2446765899658203]], [[-0.33477020263671875, -0.19271087646484375, -0.04198455810546875, 0.0042266845703125, -0.0276336669921875, -0.026275634765625, -0.11412811279296875, -0.6446456909179688, -0.2497100830078125, -0.306060791015625], [-0.1068267822265625, -0.0877685546875, -0.043243408203125, 0.00482177734375, -0.0617828369140625, -0.087249755859375, -0.0427398681640625, -0.1682281494140625, -0.0407867431640625, -0.0913238525390625], [-0.5141334533691406, -0.244476318359375, -0.1207427978515625, -0.09084701538085938, -0.11852264404296875, -0.15843582153320312, -0.15103530883789062, -0.8142204284667969, -0.32184600830078125, -0.4860572814941406], [-0.416778564453125, -0.2471332550048828, -0.11048316955566406, -0.03682899475097656, -0.11422538757324219, -0.17523193359375, -0.13290786743164062, -0.6585159301757812, -0.2775421142578125, -0.4008293151855469]], [[-1.02142333984375, -0.38421630859375, -0.32635498046875, -0.292236328125, -0.3328857421875, -0.40728759765625, -0.43548583984375, -0.90582275390625, -0.4417724609375, -0.5740966796875], [-0.451751708984375, -0.09832763671875, -0.090240478515625, -0.09771728515625, -0.0506591796875, -0.079681396484375, -0.0560302734375, -0.26373291015625, -0.105987548828125, -0.17706298828125], [-1.2801513671875, -0.254150390625, -0.24139404296875, -0.1639404296875, -0.29144287109375, -0.28826904296875, -0.49261474609375, -1.09808349609375, -0.37689208984375, -0.50775146484375], [-0.995574951171875, -0.243072509765625, -0.12628173828125, -0.09417724609375, -0.114105224609375, -0.161651611328125, -0.178680419921875, -0.785125732421875, -0.374237060546875, -0.535369873046875]], [[-0.08349609375, -0.0218505859375, 0.032470703125, -0.0223388671875, -0.0084228515625, 0.0113525390625, -0.0482177734375, -0.18487548828125, -0.044677734375, -0.042236328125], [-0.219024658203125, -0.148712158203125, -0.075103759765625, -0.372222900390625, -0.4749755859375, -0.065277099609375, -0.05584716796875, -0.580352783203125, -0.245391845703125, -0.341583251953125], [-0.88580322265625, -0.335693359375, -0.1475830078125, -0.12451171875, -0.05218505859375, -0.02789306640625, -0.10699462890625, -1.18267822265625, -0.38623046875, -0.4388427734375], [-0.607635498046875, -0.343536376953125, -0.084320068359375, -0.032012939453125, -0.270172119140625, -0.09283447265625, -0.029815673828125, -0.88623046875, -0.404266357421875, -0.551788330078125]], [[-0.07825132547054636, -0.11901072040120653, -0.18001803201218536], [-0.02585463054850834, -0.003448818691794031, -0.016020746585212464], [0.0015690475733549647, -0.10004309085672958, -0.021474810053177862], [-0.03289708600721042, -0.13098785471035512, -0.10980925418948573]], [[4.402475857732952, 5.786317211804658, 4.441413824611288, 4.412928183120243], [4.580993952549306, 5.900327466466678, 4.591454219081584, 4.546835752918355], [4.565612329560622, 5.872800865099634, 4.535373187016546, 4.611682910349373], [4.654855988457712, 5.95710774420931, 4.618329134673843, 4.6521513737287705]], [[-0.33230306390947817, -0.11530073794659756, -0.1372121936600479, -0.18859994310804495, -0.24727147054892384, -0.19102066851024802], [0.021733784826835745, -0.024126982322968615, -0.045437428415368686, -0.04855185604398571, -0.002984615632414034, 0.025438086439748986], [-4.329843211583636, -0.11186284051962048, -0.16660834212490272, -0.1781611591076171, -5.638064475960505, -5.338812628005485], [-0.39797559735237087, -0.07596961387363876, -0.08535155280978302, -0.19792879644757022, -0.33908431451393994, -0.29934512353088394]], [[-0.29179469777227496], [-0.08589285166263494], [-0.3052015618974906], [-0.4248908959350217]], [[-0.48, -0.11, -0.18, -0.5, -0.18, -0.41, -0.51, -0.77, -0.44, -0.39], [-0.09, 0, -0.07, -0.18, -0.04, -0.15, -0.24, -0.15, -0.1, -0.08], [-0.74, -0.12, -0.21, -0.54, -0.14, -0.43, -0.64, -1, -0.43, -0.31], [-0.65, -0.2, -0.29, -0.62, -0.15, -0.56, -0.74, -0.91, -0.55, -0.51]]]

def get_data_dict(pot_list, GB_list):
    data_dict = {}
    for i ,potchoice in enumerate(pot_list):
        data_dict[potchoice] = {}
        e_list = get_e_list(potchoice)
        for j, GBchoice in enumerate(GB_list):
            data_dict[potchoice][GBchoice] = {}
            for k, sub_e in enumerate(e_list):
                data_dict[potchoice][GBchoice][sub_e] = data_list_tot[i][j][k]
    data_dict['FeTiCoNiCuMoW_Zhou']['Sigma9(2-21)']['Ti'] = None
    data_dict['FeTiCoNiCuMoW_Zhou']['Sigma9(2-21)']['Mo'] = None
    data_dict['FeTiCoNiCuMoW_Zhou']['Sigma9(2-21)']['W'] = None
    return data_dict

def get_error_dict(pot_list, GB_list):
    error_dict = {}
    data_dict = get_data_dict(pot_list, GB_list)
    pot_list_EIPs = ['FeMnNiCu_Bonny', 'FeCrCoNiCu_Deluigi', 'FeTiCoNiCuMoW_Zhou', 'FeCu_Lee']
    for potchoice in pot_list:
        if potchoice == 'DFT':
            continue
        if potchoice in pot_list_EIPs:
            continue
        error_dict[potchoice] = {}
        e_list = get_e_list(potchoice)
        for GBchoice in GB_list:
            error_dict[potchoice][GBchoice] = {}
            # Iterate over each element in data_dict
            for sub_e in e_list:
                dft_value = data_dict['DFT'][GBchoice][sub_e]
                pot_value = data_dict[potchoice][GBchoice][sub_e]
                if pot_value is None:
                    continue
                error_dict[potchoice][GBchoice][sub_e] = pot_value - dft_value
    return error_dict

def get_color(potchoice):
    if potchoice == 'MACE':
        color = 'royalblue'
    elif potchoice == 'CHGNet(v0_3_0)':
        color = 'green'
    elif potchoice == 'CHGNet(v0_2_0)':
        color = 'darkorange'
    elif potchoice == 'M3GNet':
        color = 'cyan'
    elif potchoice == 'SevenNet':
        color = 'magenta'
    elif potchoice == 'FeMnNiCu_Bonny':
        color = 'pink'
    elif potchoice == 'FeCrCoNiCu_Deluigi':
        color = 'gold'
    elif potchoice == 'FeTiCoNiCuMoW_Zhou':
        color = 'brown'
    elif potchoice == 'FeCu_Lee':
        color = 'gray'
    elif potchoice == 'DFT':
        color = 'red'
    return color


def get_legend(potchoice):
    if potchoice == 'MACE':
        legend = 'MACE-MP-0'
    elif potchoice == 'CHGNet(v0_3_0)':
        legend = 'CHGNet(v0.3.0)'
    elif potchoice == 'CHGNet(v0_2_0)':
        legend = 'CHGNet(v0.2.0)'
    elif potchoice == 'M3GNet':
        legend = 'M3GNet'
    elif potchoice == 'SevenNet':
        legend = 'SevenNet-0'
    elif potchoice == 'FeMnNiCu_Bonny':
        legend = 'FeMnNiCu_Bonny'
    elif potchoice == 'FeCrCoNiCu_Deluigi':
        legend = 'FeCrCoNiCu_Deluigi'
    elif potchoice == 'FeTiCoNiCuMoW_Zhou':
        legend = 'FeTiCoNiCuMoW_Zhou'
    elif potchoice == 'FeCu_Lee':
        legend = 'FeCu_Lee'
    elif potchoice == 'DFT':
        legend = 'DFT'
    return legend



def get_legend2(potchoice):
    if potchoice == 'MACE':
        legend = 'MACE-MP-0'
    elif potchoice == 'CHGNet(v0_3_0)':
        legend = 'CHGNet(v0.3.0)'
    elif potchoice == 'CHGNet(v0_2_0)':
        legend = 'CHGNet(v0.2.0)'
    elif potchoice == 'M3GNet':
        legend = 'M3GNet'
    elif potchoice == 'SevenNet':
        legend = 'SevenNet-0'
    elif potchoice == 'FeMnNiCu_Bonny':
        legend = 'Bonny'
    elif potchoice == 'FeCrCoNiCu_Deluigi':
        legend = 'Deluigi'
    elif potchoice == 'FeTiCoNiCuMoW_Zhou':
        legend = 'Zhou'
    elif potchoice == 'FeCu_Lee':
        legend = 'Lee'
    elif potchoice == 'DFT':
        legend = 'DFT'
    return legend